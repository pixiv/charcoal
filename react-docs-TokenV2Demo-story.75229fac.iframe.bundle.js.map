{"version":3,"file":"react-docs-TokenV2Demo-story.75229fac.iframe.bundle.js","mappings":";;;;;AA8EA;;AAEA;AACA;AACA;AAGA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;;;;AAIA;AACA;;AAEA;;;AAGA;;;AAKA;;;;;AAOA;;;;;;AAMA;AAGA;;;;;AAKA;;;AAGA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAIA;AACA;AACA;AACA;;AAIA;;;AAGA;;AAEA;;;AAGA;;;;AAIA;AACA;AAGA;;;;AAIA;;;;AAMA;;AAEA;AAEA;;;AAGA;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA","sources":["webpack://charcoal-ui/./packages/react/docs/TokenV2DemoStyled.tsx"],"sourcesContent":["/* lint runs before build so json does not exist */\n\nimport { useState } from 'react'\nimport styled from 'styled-components'\n// This does not work :(\n// import tokens from '@charcoal-ui/theme/tokens/camel/css-variables.json'\nimport tokens from '../../theme/dist/unstable-tokens/camel/css-variables.json'\nimport { Button, Icon } from '@charcoal-ui/react'\n\nconst categories = ['Illustration', 'Comic', 'Novel', '3D', 'Shopping']\nconst artworks = Array.from({ length: 3 }, (_, id) => ({\n  id,\n  title: 'Title',\n  thumbnail: `https://loremflickr.com/150/100/animals?random=${id}&lock=${id}`,\n  description: 'Description',\n}))\n\nexport default function TokenV2Styled() {\n  const [selected, setSelected] = useState(categories[0])\n  return (\n    <Container>\n      <nav>\n        <div aria-label=\"Categories\" role=\"tablist\">\n          {categories.map((category) => (\n            <Tab\n              id={`category-${category}`}\n              role=\"tab\"\n              aria-selected={category === selected}\n              aria-controls={`panel-${category}`}\n              key={category}\n              onClick={() => {\n                setSelected(category)\n              }}\n            >\n              {category}\n            </Tab>\n          ))}\n        </div>\n      </nav>\n      <H2>Works from users you follow</H2>\n      <UserCard\n        id={`panel-${selected}`}\n        role=\"tabpanel\"\n        aria-labelledby={`category-${selected}`}\n      >\n        <UserInfo>\n          <User aria-label=\"UserIcon\">\n            <Icon name=\"24/FaceEdit\" />\n          </User>\n          <UserName>UserName</UserName>\n          <Button variant=\"Primary\" size=\"S\">\n            Follow\n          </Button>\n        </UserInfo>\n        <ShowAll>Show all</ShowAll>\n        <ArtworkList key={selected}>\n          {artworks.map((a) => (\n            <li key={a.id}>\n              <Artwork>\n                <ArtworkThumbnail src={a.thumbnail} alt={a.title} />\n                <ArtworkTitle>{a.title}</ArtworkTitle>\n                <ArtworkDescription>{a.description}</ArtworkDescription>\n              </Artwork>\n            </li>\n          ))}\n        </ArtworkList>\n      </UserCard>\n    </Container>\n  )\n}\n\nconst Container = styled.section`\n  transition: 0.3s color ease-in-out;\n  display: grid;\n  gap: 24px;\n  max-width: fit-content;\n`\n\nconst H2 = styled.h2`\n  margin: 0;\n  color: ${tokens.color.text.secondary.default};\n  font-size: ${tokens.text.fontSize.heading.xs};\n  line-height: ${tokens.text.lineHeight.heading.xs};\n`\n\nconst Tab = styled.a`\n  cursor: pointer;\n  font-weight: bold;\n  font-size: ${tokens.text.fontSize.body};\n  line-height: ${tokens.text.lineHeight.body};\n  padding: 13px ${tokens.space.layout[30]};\n  border-top: 2px transparent;\n\n  color: ${tokens.color.text.tertiary.default};\n  &:hover {\n    color: ${tokens.color.text.tertiary.hover};\n  }\n  &:active {\n    color: ${tokens.color.text.tertiary.press};\n  }\n\n  &[aria-selected='true'] {\n    color: ${tokens.color.text.default};\n    border-top: 2px solid ${tokens.color.border.selected};\n    &:hover {\n      color: ${tokens.color.text.hover};\n    }\n    &:active {\n      color: ${tokens.color.text.press};\n    }\n  }\n`\n\nconst UserCard = styled.div`\n  display: grid;\n  grid-template-areas:\n    'UserInfo     .           ShowAll'\n    'ArtworkList  ArtworkList ArtworkList';\n`\n\nconst UserInfo = styled.div`\n  grid-area: UserInfo;\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: left;\n  align-items: center;\n  gap: ${tokens.space.layout[20]};\n`\n\nconst User = styled.a`\n  width: 40px;\n  height: 40px;\n  display: grid;\n  place-items: center;\n  border-radius: ${tokens.radius.oval};\n  cursor: pointer;\n\n  color: ${tokens.color.icon.default};\n  background-color: ${tokens.color.container.secondary.default};\n  &:hover {\n    color: ${tokens.color.icon.hover};\n    background-color: ${tokens.color.container.secondary.hover};\n  }\n  &:active {\n    color: ${tokens.color.icon.press};\n    background-color: ${tokens.color.container.secondary.press};\n  }\n`\n\nconst UserName = styled.span`\n  color: ${tokens.color.text.default};\n  font-size: ${tokens.text.fontSize.caption.m};\n  line-height: ${tokens.text.lineHeight.caption.m};\n  font-weight: bold;\n`\n\nconst ShowAll = styled.a`\n  grid-area: ShowAll;\n  cursor: pointer;\n  color: ${tokens.color.text.tertiary.default};\n  &:hover {\n    color: ${tokens.color.text.tertiary.hover};\n  }\n  &:active {\n    color: ${tokens.color.text.tertiary.press};\n  }\n  text-align: right;\n  align-content: center;\n  font-size: ${tokens.text.fontSize.caption.m};\n  line-height: ${tokens.text.lineHeight.caption.m};\n`\n\nconst ArtworkList = styled.ul`\n  grid-area: ArtworkList;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: ${tokens.space.layout[20]};\n  list-style: none;\n  padding: 0;\n  max-width: 424px;\n`\n\nconst Artwork = styled.article`\n  display: grid;\n  gap: ${tokens.space.layout[10]};\n`\nconst ArtworkThumbnail = styled.img`\n  width: 100%;\n  aspect-ratio: 3 / 2;\n  border-radius: ${tokens.radius.m};\n`\nconst ArtworkTitle = styled.h3`\n  color: ${tokens.color.text.default};\n  font-size: ${tokens.text.fontSize.caption.m};\n  line-height: ${tokens.text.lineHeight.caption.m};\n  margin: 0;\n`\nconst ArtworkDescription = styled.p`\n  margin: 0;\n  color: ${tokens.color.text.tertiary.default};\n  font-size: ${tokens.text.fontSize.caption.s};\n  line-height: ${tokens.text.lineHeight.caption.s};\n`\n"],"names":[],"sourceRoot":""}