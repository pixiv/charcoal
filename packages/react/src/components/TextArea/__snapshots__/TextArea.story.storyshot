// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Tests > react/TextArea > AssistiveText 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-describedby="test-id"
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        rows={4}
      />
    </div>
    <div
      className="charcoal-text-field-assistive-text"
      data-invalid={false}
      id="test-id"
    >
      説明が入ります
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > AutoHeight 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        rows={4}
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > Default 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span>
          <button
            className="charcoal-clickable"
            onClick={[Function]}
          >
            Text Link
          </button>
        </span>
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-invalid={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        placeholder="Text Area"
        readOnly={false}
        rows={4}
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > Disabled 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={true}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-disabled="true"
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={true}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={true}
        id="test-id"
        onChange={[Function]}
        rows={4}
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > Invalid 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={true}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-describedby="test-id"
        aria-disabled={false}
        aria-invalid={true}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        rows={4}
      />
    </div>
    <div
      className="charcoal-text-field-assistive-text"
      data-invalid={true}
      id="test-id"
    >
      エラーメッセージ
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > Label 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        rows={4}
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > Placeholder 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        placeholder="Placeholder"
        rows={4}
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > ReadOnly 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        readOnly={true}
        rows={4}
        value="読み取り専用"
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > Required 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-required-text"
      >
        *必須
      </div>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        rows={4}
      />
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > ShowCount 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
      style={
        Object {
          "border": 0,
          "clip": "rect(0 0 0 0)",
          "clipPath": "inset(50%)",
          "height": "1px",
          "margin": "-1px",
          "overflow": "hidden",
          "padding": 0,
          "position": "absolute",
          "whiteSpace": "nowrap",
          "width": "1px",
        }
      }
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span />
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "5",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={true}
        disabled={false}
        id="test-id"
        maxLength={100}
        onChange={[Function]}
        rows={4}
      />
      <span
        className="charcoal-text-area-counter"
      >
        0/100
      </span>
    </div>
  </div>
</div>
`;

exports[`Storybook Tests > react/TextArea > SubLabel 1`] = `
<div
  data-dark={false}
>
  <div
    aria-disabled={false}
    className="charcoal-text-area-root"
  >
    <div
      className="charcoal-field-label-root"
    >
      <label
        className="charcoal-field-label"
        htmlFor="test-id"
        id="test-id"
      >
        Label
      </label>
      <div
        className="charcoal-field-label-sub-label"
      >
        <span>
          <button
            className="charcoal-clickable"
          >
            Text Link
          </button>
        </span>
      </div>
    </div>
    <div
      aria-invalid={false}
      className="charcoal-text-area-container"
      style={
        Object {
          "--charcoal-text-area-rows": "4",
        }
      }
    >
      <textarea
        aria-disabled={false}
        aria-labelledby="test-id"
        className="charcoal-text-area-textarea"
        data-no-bottom-padding={false}
        disabled={false}
        id="test-id"
        onChange={[Function]}
        rows={4}
      />
    </div>
  </div>
</div>
`;
