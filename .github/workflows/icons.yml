name: icons

on:
  schedule:
    - cron: '0 1 * * 1'

  workflow_dispatch:

env:
  OUTPUT_ROOT_DIR: ../icon-files/
  TARGET_BRANCH: ${{ github.event_name == 'workflow_dispatch' && github.ref_name || 'main' }}

jobs:
  icons:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_BRANCH }}
      - uses: pnpm/action-setup@v4
        with:
          version: '10.4.0'

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build icons
        run: pnpm --filter @charcoal-ui/icons-cli run build

      - name: Export icons
        env:
          FIGMA_FILE_URL: ${{ secrets.FIGMA_FILE_URL }}
          FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
        run: pnpm --filter @charcoal-ui/icons-cli cli:icons figma:export

      - name: Optimize icons
        run: pnpm --filter @charcoal-ui/icons-cli cli:icons svg:optimize --ignoreFile ../../misc/icons-cli-denylist

      - name: Generate icon files
        run: pnpm --filter @charcoal-ui/icons-cli cli:icons files:generate

      - name: Generate github token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.CHARCOAL_BOT_APP_ID }}
          private_key: ${{ secrets.CHARCOAL_BOT_PRIVATE_KEY }}

      - name: Create Pull Request for updated icons
        env:
          GITHUB_ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
          GITHUB_REPO_OWNER: pixiv
          GITHUB_REPO_NAME: charcoal
          GITHUB_DEFAULT_BRANCH: ${{ env.TARGET_BRANCH }}
        run: pnpm --filter @charcoal-ui/icons-cli cli:icons github:pr
