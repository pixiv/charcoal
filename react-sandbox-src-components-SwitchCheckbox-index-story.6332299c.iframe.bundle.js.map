{"version":3,"file":"react-sandbox-src-components-SwitchCheckbox-index-story.6332299c.iframe.bundle.js","mappings":";AA2CA;;AAIA;;;AAMA;;;AAGA;;;;AAMA;AAEA;;;;;;;;AAUA;;;;AAMA;;;;;;;AAOA;;AAIA;;;;;;;AAOA;;;;AAMA;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;;;;;;;;;AASA;AACA;;;;;AAKA;;AAEA;;;AC3IA","sources":["webpack://charcoal-ui/./packages/react-sandbox/src/components/SwitchCheckbox/index.tsx","webpack://charcoal-ui/./packages/react-sandbox/src/components/SwitchCheckbox/index.story.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport styled, { css } from 'styled-components'\nimport { applyEffect } from '@charcoal-ui/utils'\n\nexport interface Props extends React.ComponentPropsWithoutRef<'input'> {\n  gtmClass?: string\n  flex?: boolean\n  rowReverse?: boolean\n}\n\nexport default React.forwardRef(function SwitchCheckbox(\n  {\n    gtmClass,\n    flex = false,\n    rowReverse = false,\n    children,\n    disabled,\n    ...props\n  }: Props,\n  ref: React.Ref<HTMLInputElement>\n) {\n  return (\n    <Label\n      className={gtmClass !== undefined ? `gtm-${gtmClass}` : ''}\n      flex={flex}\n      rowReverse={rowReverse}\n      aria-disabled={disabled}\n    >\n      <SwitchOuter>\n        <SwitchInput {...props} disabled={disabled} ref={ref} />\n        <SwitchInner>\n          <SwitchInnerKnob />\n        </SwitchInner>\n      </SwitchOuter>\n      {children != null && (\n        <Children rowReverse={rowReverse}>{children}</Children>\n      )}\n    </Label>\n  )\n})\n\nconst Children = styled.span<{ rowReverse: boolean }>`\n  ${(p) =>\n    p.rowReverse\n      ? css`\n          margin-right: 8px;\n        `\n      : css`\n          margin-left: 8px;\n        `}\n`\n\nconst Label = styled.label<{ flex: boolean; rowReverse: boolean }>`\n  display: inline-flex;\n  align-items: center;\n  ${({ flex }) =>\n    flex &&\n    css`\n      display: flex;\n      justify-content: space-between;\n    `}\n  ${({ rowReverse }) =>\n    css`\n      flex-direction: ${rowReverse ? 'row-reverse' : 'row'};\n    `}\n  cursor: pointer;\n  outline: 0;\n\n  &[aria-disabled='true'] {\n    cursor: auto;\n  }\n`\n\nconst SwitchOuter = styled.span`\n  display: inline-flex;\n  position: relative;\n  z-index: 0;\n`\n\nconst SwitchInner = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  width: 28px;\n  height: 16px;\n  border-radius: 16px;\n  border: 2px solid transparent;\n  background: ${({ theme }) => theme.color.text4};\n  transition: box-shadow 0.2s, background-color 0.2s;\n`\n\nconst SwitchInnerKnob = styled.div`\n  position: absolute;\n  display: block;\n  top: 0;\n  left: 0;\n  width: 12px;\n  height: 12px;\n  background-color: ${({ theme }) => theme.color.text5};\n  border-radius: 50%;\n  transform: translateX(0);\n  transition: transform 0.2s;\n`\n\nconst SwitchInput = styled.input.attrs({\n  type: 'checkbox' as string,\n})`\n  position: absolute;\n  /* NOTE: this is contained by the GraphicCheckboxOuter */\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  /* just to control the clickable area if used standalone */\n  border-radius: 16px;\n  opacity: 0;\n  appearance: none;\n  outline: none;\n  cursor: pointer;\n\n  &:checked {\n    ~ ${SwitchInner} {\n      background-color: ${({ theme }) => theme.color.brand};\n\n      ${SwitchInnerKnob} {\n        transform: translateX(12px);\n      }\n    }\n  }\n\n  &:disabled {\n    cursor: auto;\n\n    ~ ${SwitchInner} {\n      opacity: ${({ theme }) => theme.elementEffect.disabled.opacity};\n    }\n  }\n\n  &:not(:disabled):focus {\n    ~ ${SwitchInner} {\n      box-shadow: 0 0 0 4px\n        ${({ theme }) =>\n          applyEffect(theme.color.brand, theme.elementEffect.disabled)};\n    }\n  }\n`\n","import { Meta, StoryObj } from '@storybook/react'\nimport SwitchCheckbox from '.'\n\nexport default {\n  title: 'react-sandbox/SwitchCheckbox',\n  component: SwitchCheckbox,\n} satisfies Meta<typeof SwitchCheckbox>\n\nexport const Default: StoryObj<typeof SwitchCheckbox> = {\n  render: (props) => {\n    return <SwitchCheckbox {...props}>children</SwitchCheckbox>\n  },\n}\n"],"names":[],"sourceRoot":""}